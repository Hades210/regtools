[twocolumn]article


-0.5in
-0.5in
0.0in
0in
0in
7.0in
9.5in
0in
0.05in
0.3pt

25pt

fancyvrb
relsize
hyperref

listings
amsmath



xleftmargin=5mm,framexleftmargin=10mm,basicstyle=

Name: 

Directions: MAKE SURE TO COPY YOUR ANSWERS TO A SEPARATE SHEET FOR SENDING
ME AN ELECTRONIC COPY LATER.

1. (20)  This problem concerns the ALOHA network model.  Continue to
assume that , ,  and that the network
consists of just two nodes.  Suppose .  Find the probability
that both nodes tried to send during epoch 1.

2.  This problem concerns the bus ridership example, pp.20ff.



[(a)] (20) Supply the reason for Equation (2.54), in the form of a
``mailing tube'' number, e.g. (2.5).  (Write your answer in the form
``(2.x)'', NOT ``Equation (2.x)''.

[(b)] (20) In the second-to-last bullet, p.20, we state the
assumption that passengers make the decision to alight or not
independently.  In what equation, among (2.52)-(2.56), is that
assumption used?

[(c)] (20) An observer at the second stop notices that no one
alights there, but it is dark and the observer couldn't see whether
anyone was on the bus. Find the probability that there was one passenger
on the bus at the time.



3. (20) We toss a coin until we get  heads in a row.  Let 
denote the number of tosses needed, so that for instance the pattern
HTHHH gives  for .  Fill in the blanks in the following
simulation code, which finds the approximate probability that .


ngtm <- function(k,m,nreps) 
   count <- 0
   for (rep in 1:nreps) 
      blank (a)
      for (i in 1: blank (b) ) 
         toss <- sample(0:1,1)
         if (toss) 
            consech <- consech + 1
            if (consech == blank (c) ) break
          else consech <- 0
      
      if (consech < k) count <- count + 1
   
   return(count/ blank (d) )







Solutions:

1.  

2.a (2.7)

2.b (2.55)

2.c  Let  denote the number of passengers alighting at stop i.
















3.


ngtm <- function(k,m,nreps) 
   count <- 0
   for (rep in 1:nreps) 
      consech <- 0
      for (i in 1:m) 
         toss <- sample(0:1,1)
         if (toss) 
            consech <- consech + 1
            if (consech == k) break
          else consech <- 0
      
      if (consech < k) count <- count + 1
   
   return(count/nreps)




