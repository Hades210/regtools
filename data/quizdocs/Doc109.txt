article

-0.5in
-0.5in
0.0in
0in
0in
7.0in
9.5in
0in
0.05in
0.3pt
fancyvrb
relsize
hyperref
listings



Name: 

Directions: Work only on this sheet (on both sides, if
needed); do not turn in any supplementary sheets of paper. There is
actually plenty of room for your answers, as long as you organize
yourself BEFORE starting writing.

1. (25) Consider the simple board game, pp.15ff, starting at 0.
Change the game so that it has 16 squares, numbered 0 to 15, but is
otherwise identical to the original one.  Let X denote the square the
player lands on after the first turn.  Find E(X), expressing your answer
as a sum of fractions, e.g. 3/2 + 1/5 (-3/8).

2. (25) Supppose we have a random variable X, and define a new
random variable Y, which is equal to X if X  8 and equal to 0
otherwise.  Assume X takes on only a finite number of values (just a
mathematical nicety, not really an issue).  Which one of the following
is true:



[(i)] .

[(ii)] .

[(iii)] Either of  and  could be larger than the other,
depending on the situation.

[(iv)]  is undefined.



3. This problem concerns the binary tree model in our homework.



[(a)] (25) Find the probability that the root has exactly 1
grandchild, expressing your answer in terms of p, algebraically
simplified.

[(b)] (25) Fill in the blanks in the following code simulating the
function r(k,p):


sim1tree <- function(k,p) 
   if (k == 0) return(           )                           # blank
   prevlevelbranches <- 1
   for (m in 1:      )                                      # blank
      newbranches <- 0
      for (i in 1:                 )                        # blank
         for (j in 1:2)   
            if (sample(0:1,1,prob=c(1-p,p)) == 1) 
               newbranches <- newbranches + 1
            
         
      
      if (newbranches == 0) return(0)
                                                             # blank
   
   return(1)


treesim <- function(p,k,nreps) 
   count <- 0
   for (i in 1:nreps) 
      treetok <- sim1tree(k,p)
      count <- count + treetok
   
   return(         )                                         # blank






Solutions:

1.  X can take on the values 1 through 9.  Then 





, 
, etc. 

2. Answer (iii) is correct.  If we'd had the additional condition
, then (i) would have been right.  But without that condition,
then for instance suppose X were always negative; then Y would always be
larger, etc.

3.a  The root will have exactly one grandchild iff it has two
children, and one of them has one child and the other has none.  Thus
the queried probability is





3.b


sim1tree <- function(p,k) 
   if (k == 0) return(1)
   prevlevelbranches <- 1
   for (m in 1:k)   # levels
      newbranches <- 0
      for (i in 1:prevlevelbranches) 
         for (j in 1:2)   # account for left, right outlinks
            if (sample(0:1,1,prob=c(1-p,p)) == 1) 
               newbranches <- newbranches + 1
            
         
      
      if (newbranches == 0) return(0)
      prevlevelbranches <- newbranches
   
   return(1)


treesim <- function(p,k,nreps) 
   count <- 0
   for (i in 1:nreps) 
      treetok <- sim1tree(p,k)
      count <- count + treetok
   
   return(count/nreps)






