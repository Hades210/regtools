[twocolumn]article

-0.5in
-0.5in
0.0in
0in
0in
7.0in
9.5in
0in
0.05in
0.3pt

25pt

fancyvrb
relsize
hyperref

listings
amsmath



xleftmargin=5mm,framexleftmargin=10mm,basicstyle=

Name: 

Directions: Work only on this sheet (on both sides, if
needed).  MAKE SURE TO COPY YOUR ANSWERS TO A SEPARATE SHEET FOR SENDING
ME AN ELECTRONIC COPY LATER.

Important note:  Remember that in problems calling for R code, you
are allowed to use any built-in R function, e.g. choose(), 
sum(), etc.  

1. Consider the train rendezvous problem in Section 8.2.4.  In
each of the following, give your answer as a double integral, dt ds.
In your electronic answers file, give your answer as five R expressions
separated by commas (and optional spaces), as follows:  
lower limit in outer integral;
upper limit in outer integral;
lower limit in inner integral;
upper limit in inner integral;
integrand.  For instance, for






write


3, 8, s, 1-s, (s+t)^2




[(a)] (15) Find .

[(b)] (20 Find .



2. Suppose the random vector  has mean vector 
(1.5,2.0)'.  Suppose also that each  has variance 4 and that
.



[(a)] (15) Find , as an R matrix expression.

[(b)] (15) Find , as an R matrix expression.



3.  The function below computes the correlation matrix
corresponding to a given covariance matrix.  Element (i,j) of the former
is the correlation between the i and the j elements of the
given random vector.


covtocorr <- function(covmat) 
   n <- nrow(covmat)
   stddev <- vector(length=n)
   cormat <- matrix(nrow=n,ncol=n)
   for (i in 1:n) 
      stddev[i] <- blank (a)
      cormat[i,i] <- blank (b)
   
   for (i in 1:(n-1)) 
      for (j in (i+1):n) 
         tmp <- blank (c)
         cormat[i,j] <- tmp
         cormat[j,i] <- tmp
      
   
   return(cormat)





[(a)] (5) Fill in blank (a).

[(b)] (5) Fill in blank (b).

[(c)] (15) Fill in blank (c).



4. (15) Suppose we have three electronic parts, with independent
lifetimes that are exponentially distributed with mean 2.5.  They are
installed simultaneously.  Find the mean time until the last failure
occurs.

Solutions:

1.a


0.8, 1, 1.8-s, 1, 2-s-t


1.a 


0, 0.4, 0, 0.3, 2-s-t


2.a


c(2,3) 


2.b


c(1,1) 


3.


covtocorr <- function(covmat) 
   n <- nrow(covmat)
   stddev <- vector(length=n)
   cormat <- matrix(nrow=n,ncol=n)
   for (i in 1:n) 
      stddev[i] <- sqrt(covmat[i,i])
      cormat[i,i] <- 1.0
   
   for (i in 1:(n-1)) 
      for (j in (i+1):n) 
         tmp <- covmat[i,j] / (stddev[i]*stddev[j])
         cormat[i,j] <- tmp
         cormat[j,i] <- tmp
      
   
   return(cormat)



4.  As in the computer worm example in Section 8.3.8, the mean is


1/(3*0.4) + 1/(2*0.4) + 1/(1*0.4) 




